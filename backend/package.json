{
  "name": "immigration-portal-backend",
  "version": "1.0.0",
  "description": "Backend API for Immigration Portal - A comprehensive immigration management system",
  "main": "dist/server.js",
  "scripts": {
    "start": "node dist/server.js",
    "dev": "nodemon --exec tsx src/server.ts",
    "dev:safe": "tsx src/utils/processManager.ts && tsx src/server.ts",
    "force-start": "tsx src/scripts/forceCleanup.ts && tsx src/server.ts",
    "stop": "tsx src/scripts/stopServer.ts",
    "status": "tsx src/scripts/checkStatus.ts",
    "build": "tsc",
    "build:watch": "tsc --watch",
    "clean": "rimraf dist",
    "prebuild": "npm run clean",
    "start:dev": "tsx src/server.ts",
    "start:prod": "node dist/server.js",
    "start:fast": "tsx src/server-optimized.ts",
    "start:fast:prod": "node dist/server-optimized.js",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "lint": "eslint src/**/*.ts",
    "lint:fix": "eslint src/**/*.ts --fix",
    "format": "prettier --write src/**/*.ts",
    "seed": "ts-node src/scripts/seedDatabase.ts",
    "migrate": "ts-node src/scripts/migrate.ts",
    "create-indexes": "ts-node src/scripts/createIndexes.ts",
    "monitor-indexes": "ts-node src/scripts/monitorIndexes.ts",
    "audit-maintenance": "ts-node src/scripts/auditLogMaintenance.ts",
    "migrate:multi-tenancy": "ts-node src/scripts/migrateToMultiTenancy.ts",
    "validate:multi-tenancy": "ts-node src/scripts/validateMultiTenancy.ts",
    "postinstall": "npm rebuild bcrypt --build-from-source || true"
  },
  "keywords": [
    "immigration",
    "portal",
    "api",
    "nodejs",
    "express",
    "mongodb",
    "typescript"
  ],
  "author": "Immigration Portal Team",
  "license": "MIT",
  "dependencies": {
    "@sentry/integrations": "^7.114.0",
    "@sentry/node": "^7.114.0",
    "@types/express-session": "^1.18.2",
    "@types/express-validator": "^2.20.33",
    "@types/hpp": "^0.2.6",
    "@types/node-cron": "^3.0.11",
    "bcryptjs": "^2.4.3",
    "compression": "^1.8.1",
    "connect-mongo": "^5.1.0",
    "cookie-parser": "^1.4.6",
    "cors": "^2.8.5",
    "dayjs": "^1.11.10",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "express-mongo-sanitize": "^2.2.0",
    "express-rate-limit": "^7.5.1",
    "express-session": "^1.18.2",
    "express-validator": "^7.2.1",
    "helmet": "^7.2.0",
    "hpp": "^0.2.3",
    "ioredis": "^5.3.2",
    "jsonwebtoken": "^9.0.2",
    "memorystore": "^1.6.7",
    "mongoose": "^7.6.3",
    "morgan": "^1.10.0",
    "newrelic": "^13.3.2",
    "node-cron": "^4.2.1",
    "qrcode": "^1.5.4",
    "redis": "^4.6.10",
    "speakeasy": "^2.0.0",
    "winston": "^3.17.0",
    "winston-daily-rotate-file": "^5.0.0",
    "winston-mongodb": "^7.0.1",
    "xss": "^1.0.15"
  },
  "devDependencies": {
    "@types/bcryptjs": "^2.4.6",
    "@types/compression": "^1.7.5",
    "@types/cookie-parser": "^1.4.9",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/express-rate-limit": "^5.1.3",
    "@types/jest": "^29.5.8",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/morgan": "^1.9.9",
    "@types/node": "^20.10.4",
    "@types/qrcode": "^1.5.5",
    "@types/speakeasy": "^2.0.10",
    "@types/supertest": "^2.0.16",
    "@types/uuid": "^10.0.0",
    "@typescript-eslint/eslint-plugin": "^6.13.1",
    "@typescript-eslint/parser": "^6.13.1",
    "eslint": "^8.55.0",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "lint-staged": "^15.2.0",
    "nodemon": "^3.0.2",
    "prettier": "^3.1.0",
    "rimraf": "^5.0.5",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.1",
    "tsx": "^4.20.6",
    "typescript": "^5.3.3"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "src/**/*.ts": [
      "eslint --fix",
      "prettier --write",
      "git add"
    ]
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "testMatch": [
      "**/__tests__/**/*.ts",
      "**/?(*.)+(spec|test).ts"
    ],
    "collectCoverageFrom": [
      "src/**/*.ts",
      "!src/**/*.d.ts",
      "!src/server.ts",
      "!src/scripts/**"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": [
      "text",
      "lcov",
      "html"
    ]
  }
}
